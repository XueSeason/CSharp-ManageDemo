<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhkAEsAeZrAP///9ra2vf39/b29vz8/Pj4+OTk5MzMzN7e3vX19bCwsNTU1Pv7++Xl5YuxUI+1
        U2eJM4esTPn5+aPOX3ygQvr6+uvr6+fn58nJyebm5tjY2Orq6vHx8dHR0be3t9fX18fHx9nZ2d/f39XV
        1b+/v/Dw8MbGxsjIyPPz88LCwsTExMPDw7q6uu/v78/Pz+jo6LW1tbKystPT09bW1ru7u+Li4tvb27y8
        vMHBwdzc3Onp6d3d3YmuTpG3VHeaQISpSp7JXIuyTW6NP5S8VYSkUOHh4aW4iJCic+zt6+7u7tLS0r29
        vXaVQ5Wneff49qi7inqbSHucSaK0hKa5iMjJx4qdbZSneL2+vHeWRcbKwW6PO4+qZJS8VKLNX32hRHmT
        UqKrlqy8lH2gRHyfR3ygQ7jAqqe2j4WrStDTypK5Vezs7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH/C05FVFNDQVBFMi4wAwEAAAAh+QQF
        AABrACwAAAAAkAEsAQAH/4BqgoOEhYaHiImKi4yNjo+QkZKTlJWWl5iZmpucnZ6foKGio6Slpqeoqaqr
        rK2ur7CxsrO0tba3uLm6u7y9vr/AwcLDxMXGx8jJysvMzc7P0NHS09TV1tfY2drb3N3e3+Dh4uPk5ebn
        6Onq6+zt7u/w8fLz9PX29/j5+vv8/f7/AAMKHEiwoMGDCBMqXMiwocOHECNKnEixosWLGDNq3Mixo8eP
        IEOKHEmypMmTKFOqXMmypcuXMGPKnEmzps2bOHPq3Mmzp8+fQIMKHUq0qNGjSJMqXcq0qdOnUKNKnUq1
        qtWrWLNq3cq1q9evYMOKHUu2rNmzaNOqXcu2rdu3cP/jyp1Lt67du3jz6t3Lt6/fv4ADCx5MuLDhw4gT
        K17MuLHjx5AjS55MubLly5gza97MubPnz6BDix5NurTp06hTq17NurXr17Bjy55Nu7bt27hz697Nu7fv
        38CDCx9OvLjx48iTK1/OvPk3Cy9qiEBAvbr169iza9/Ovbv37+DDix9PfruIGi8sTLVwAQEHBgDiy59P
        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
</value>
  </data>
</root>